# Deploy to Azure Kubernetes Service

# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'd76b251d-b14e-4240-98e1-96caa0d0891c'
  imageRepository: 'nobsdevopsbookresources'
  containerRegistry: 'nobsreg92.azurecr.io'
  dockerfilePath: '**/Part-II-Project/New Application/Dockerfile/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'nobsreg927e80-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

steps:
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: 'Part-I-Tools/Azure Pipelines/VM'
    commandOptions: '-var "subscriptionID=$(subscriptionID)" -var "network_interface_id=$(network_interface_id)"'
    backendServiceArm: 'Azure subscription 1(d4d55cd8-d4e7-40cd-8bc0-abc7db9c4ecd)'
    backendAzureRmResourceGroupName: 'NoBSDevOps'
    backendAzureRmStorageAccountName: 'nobsdevopsstor'
    backendAzureRmContainerName: 'terraform'
    backendAzureRmKey: 'tf/terraform.tfstate'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: 'Part-I-Tools/Azure Pipelines/VM'
    commandOptions: '-var "subscriptionID=$(subscriptionID)" -var "network_interface_id=$(network_interface_id)"'
    environmentServiceNameAzureRM: 'Azure subscription 1(d4d55cd8-d4e7-40cd-8bc0-abc7db9c4ecd)'